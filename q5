#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include<conio.h>
#define SIZE 5
char matrix[SIZE][SIZE] = {
    {'M', 'F', 'H', 'I', 'J'},
    {'K', 'U', 'N', 'O', 'P'},
    {'Q', 'Z', 'V', 'W', 'X'},
    {'Y', 'E', 'L', 'A', 'R'},
    {'G', 'D', 'S', 'T', 'B'}
};

void findPosition(char ch, int *row, int *col) {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void encrypt(char text[]) {
    int len = strlen(text);
    for (int i = 0; i < len; i += 2) {
        int row1, col1, row2, col2;
        findPosition(text[i], &row1, &col1);
        findPosition(text[i + 1], &row2, &col2);

        if (row1 == row2) {
            text[i] = matrix[row1][(col1 + 1) % SIZE];
            text[i + 1] = matrix[row2][(col2 + 1) % SIZE];
        } else if (col1 == col2) {
            text[i] = matrix[(row1 + 1) % SIZE][col1];
            text[i + 1] = matrix[(row2 + 1) % SIZE][col2];
        } else {
            text[i] = matrix[row1][col2];
            text[i + 1] = matrix[row2][col1];
        }
    }
}

void prepareText(char text[]) {
    int len = strlen(text), j = 0;
    char newText[100];
    for (int i = 0; i < len; i++) {
        if (isalpha(text[i])) {
            newText[j++] = toupper(text[i]);
        }
    }
    newText[j] = '\0';
    if (j % 2 != 0) {
        newText[j++] = 'X';
        newText[j] = '\0';
    }
    strcpy(text, newText);
}

int main() {
    char message[] = "Must see you over Cadogan West. Coming at once.";
    prepareText(message);
    encrypt(message);
    printf("Encrypted Message: %s\n", message);
    getch();
}
